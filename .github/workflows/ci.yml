name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Create .env file
      run: echo "REACT_APP_RAPID_API_KEY=${{ secrets.REACT_APP_RAPID_API_KEY }}" > .env

    - name: Install dependencies
      run: npm install

    - name: Build the React app
      run: npm run build
      env:
        REACT_APP_RAPID_API_KEY: ${{ secrets.REACT_APP_RAPID_API_KEY }}

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Deploy to EC2
  #     run: |
  #       ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE_HOST }} << 'EOF'
  #         docker pull ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
  #         docker stop my-react-app || true
  #         docker rm my-react-app || true
  #         docker run -d -p 80:3000 --name my-react-app --env REACT_APP_RAPID_API_KEY=${{ secrets.REACT_APP_RAPID_API_KEY }} ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
  #       EOF
  #     env:
  #       DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #       DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #       EC2_INSTANCE_HOST: ${{ secrets.EC2_INSTANCE_HOST }}
  #       EC2_USER: ${{ secrets.EC2_USER }}
